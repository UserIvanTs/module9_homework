Задание 1.

var result = {
	list: []
};

const parser = new DOMParser();

const xmlEntity = `
<list>
  <student>
    <name lang="en">
      <first>Ivan</first>
      <second>Ivanov</second>
    </name>
    <age>35</age>
    <prof>teacher</prof>
  </student>
  <student>
    <name lang="ru">
      <first>Петр</first>
      <second>Петров</second>
    </name>
    <age>58</age>
    <prof>driver</prof>
  </student>
</list>
`;

const xmlDOM = parser.parseFromString(xmlEntity, "text/xml");
const studentsNodes = xmlDOM.querySelectorAll("student");

studentsNodes.forEach((element) => {
	var student = new Object();
	const studentFirstName = element.querySelector("first");
	const studentSecondName = element.querySelector("second");
	const studentAge = element.querySelector("age");
	const studentProf = element.querySelector("prof");
	const nameNode = element.querySelector("name");
	const nameLang = nameNode.getAttribute("lang");
	student.name = studentFirstName.textContent + ' ' + studentSecondName.textContent;
	student.age = studentAge.textContent;
	student.prof = studentProf.textContent;
	student.lang = nameLang;
	result.list.push(student);
});

console.log(result);

Задание 2

const jsonString = `
{
	"list": [
	 {
	  "name": "Petr",
	  "age": "20",
	  "prof": "mechanic"
	 },
	 {
	  "name": "Vova",
	  "age": "60",
	  "prof": "pilot"
	 }
	]
   }
   `;
    
function transformJson(strJson) {

	let data = JSON.parse(strJson);
	
    let list = data.list;
	
	let result = {list: []};
	let objList = new Object();
	    
	list.forEach(function(elem) {
		objList = elem;

        result.list.push(objList);

	});
	console.log(result);
}
transformJson(jsonString); 

Задание 3

function useRequest(url, callback) {
	var xhr = new XMLHttpRequest();
	xhr.open('GET', url, true);
	
	xhr.onload = function() {
	  if (xhr.status != 200) {
		console.log('Статус ответа: ', xhr.status);
	  } else {
		const result = JSON.parse(xhr.response);
		
		if (callback) {
		  callback(result);
		}
	  }
	  
	};
	
	
	xhr.onerror = function() {
	  console.log('Ошибка! Статус ответа: ', xhr.status);
	};
	
	xhr.send();
  }; 
  

  const resultNode = document.querySelector('.error');

  const btnNode = document.querySelector('.btn-request');
  const value = document.querySelector('input');
  
  
  

   function displayResult(apiData) {
	let cards = '';
	

	if( ! Number(value.value) || Number(value.value)  > 10 || Number(value.value) < 1 ) {
		resultNode.innerHTML = 'Число вне диапазона от 1 до 10';
	}else {
        apiData.forEach(item => {
			const cardBlock = `
			  <div class="card">
				<img
				  src="${item.download_url}"
				  class="card-image"
				/>
				<p>${item.author}</p>
			  </div>
			`;
			cards = cards + cardBlock;
		  });
		  resultNode.innerHTML = cards;
	}
  }
  
 
  btnNode.addEventListener('click', () => {
	useRequest(`https://picsum.photos/v2/list/?limit=${parseInt(value.value)}`, displayResult);
  });

Задание 4

function useRequest1(url, callback) {
	var xhr = new XMLHttpRequest();
	xhr.open('GET', url, true);
	
	xhr.onload = function() {
	  if (xhr.status != 200) {
		console.log('Статус ответа: ', xhr.status);
	  } else {
		const result = JSON.parse(xhr.response);
		
		if (callback) {
		  callback(result);
		}
	  }
	  
	};
	
	xhr.onerror = function() {
	  console.log('Ошибка! Статус ответа: ', xhr.status);
	};
	
	xhr.send();
  }; 
  

  const resultNode1 = document.querySelector('.error1');
  const resultNode2 = document.querySelector('.error2');
  const resultNode3 = document.querySelector('.error3');
 
  const btnNode1 = document.querySelector('.btn-request1');
  const input1 = document.querySelector('.input1');
  const input2 = document.querySelector('.input2');
  
  
  

   function displayResult1(apiData) {
	let cards = '';
	
	

	if( ! Number(input1.value) || Number(input1.value)  > 500 || Number(input1.value) < 100 ) {
		
		resultNode1.innerHTML = 'Число вне диапазона от 100 до 500';
		setTimeout(() => {
			resultNode1.innerHTML = ' ';
		}, 3000);
	
	}else if(! Number(input2.value) || Number(input2.value)  > 500 || Number(input2.value) < 100) {	
		    
		resultNode2.innerHTML = 'Число вне диапазона от 100 до 500';
		setTimeout(() => {
			resultNode2.innerHTML = ' ';
		}, 3000);
	
	}else {
		apiData.forEach(item => {
		const cardBlock = `
			  <div class="card">
				<img
				  src="${item.file}"
				  class="card-image"
				/>
			  </div>
			`;
			cards = cards + cardBlock;
		});
		  
		  resultNode3.innerHTML = cards;
	};
  }
  
  btnNode1.addEventListener('click', () => {
	useRequest1(`https://loremflickr.com/json/g/${input1.value}/${input2.value}/all`, displayResult1);
  });
  
  Задание 5
  
  const width = document.querySelector('.width');
const height = document.querySelector('.height');
const textW = document.querySelector('.text-w');
const textH = document.querySelector('.text-h');
const btn = document.querySelector('.j-btn');
const content = document.querySelector('.content');

const useRequest = (url) => {
	
	return fetch(url)
	  .then((response) => {
		console.log('response', response);
		return response.json();
	  })
	  .then((json) => { return json; })
	  .catch(() => { console.log('error') });

	  
  }
  

const displayResult = (apiData) => {
	let cards = '';
	
    if( ! +width.value || width.value  > 500 || width.value < 100 ) {
		
		textW.innerHTML = 'Число вне диапазона от 100 до 500';
		setTimeout(() => {
			textW.innerHTML = ' ';
		}, 3000);
	
	}else if(! +height.value || height.value  > 500 || height.value < 100) {	
		    
		textH.innerHTML = 'Число вне диапазона от 100 до 500';
		setTimeout(() => {
			textH.innerHTML = ' ';
		}, 3000);
	
	}else {
		apiData.forEach(item => {
		let cardBlock = `
			  <div class="card">
				<img
				  src="${item.download_url}"
				  class="card-image" style='width:${width.value}px; height:${height.value}px;' 
				/>
			  </div>
			`;
			cards = cards + cardBlock;
		});
		content.innerHTML = cards;
	};
  }

 
  
  const randomNum = Math.floor(Math.random() * 30);
 
  btn.addEventListener('click', async () => {
	
	let requestResult = await useRequest(`https://picsum.photos/v2/list?page=${randomNum}&limit=${randomNum}`);

	let displayR = await displayResult(requestResult );
    let requsJ = JSON.stringify(requestResult);
	let strJson = localStorage.setItem('myJSON',requsJ);
  });

  document.addEventListener("DOMContentLoaded", async () => {

	let myJSON = localStorage.getItem('myJSON');
	let obiJ = JSON.parse(myJSON);
	
	console.log(obiJ);
	let cards = '';
		obiJ.forEach(item => {
			let cardBlock = `
				  <div class="card">
					<img
					  src="${item.download_url}"
					  class="card-image" style='width: 30vw; height: auto;' 
					/>
				  </div>
				`;
				cards = cards + cardBlock;
				
			});
		content.innerHTML = cards;
	});
